<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>StockMonkey</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            background-color: #f0f0f0;
        }

        /* Wrapper to hold both gifs and position them symmetrically around the center */
        .gif-wrapper {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 20px;
        }

        /* Position the original monkey (dart throwing) to the right of the center */
        #monkey {
            width: 200px;
            height: 200px;
            background-image: url('https://1b-f.s3.eu-west-1.amazonaws.com/a/151856-E28E9739-F482-433E-A22A-E7AC5C434768-0-1599580299.gif');
            background-size: cover;
            display: none; /* Initially hidden */
            margin-left: 50px; /* Shift to the right of the center */
        }

        /* Position the new monkey to the left of the center */
        #newMonkey {
            width: 200px;
            height: 200px;
            background-image: url('https://media1.giphy.com/media/i0Piy28A0YShaSibuZ/giphy.gif?cid=6c09b952g5hn3yy2nkzltc2zdxly48ek2ffweorm3dn7kf55&ep=v1_internal_gif_by_id&rid=giphy.gif&ct=s');
            background-size: cover;
            display: none; /* Initially hidden */
            margin-right: 50px; /* Shift to the left of the center */
        }

        button {
            padding: 10px 20px;
            font-size: 18px;
            cursor: pointer;
            margin-top: 20px;
        }

        /* Text Transition Styles */
        #introText {
            font-size: 24px;
            margin-top: 20px;
        }

        /* Hidden initially */
        .hidden {
            display: none;
        }

        @keyframes throwDart {
            0% { transform: translateX(0); }
            50% { transform: translateX(100px); }
            100% { transform: translateX(0); }
        }

        .animate {
            display: block;
            animation: throwDart 1s ease-in-out;
        }

        /* Modal Styles */
        #modal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 400px;
            background-color: white;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            padding: 20px;
            z-index: 1000;
            border-radius: 10px;
            text-align: center;
        }

        #overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: none;
            z-index: 999;
        }

        #closeModal {
            margin-top: 20px;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
        }

        /* Chart Styles */
        #chartContainer {
            width: 100%;
            height: 200px; /* Set the height of the chart */
            margin-top: 20px;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> <!-- Add Chart.js -->
</head>
<body>

    <!-- Updated Introductory text -->
    <div id="introText">In 2010, Research Affiliates concluded a study in which 100 monkeys threw darts at the stock pages each year. They compared their results to the results of professional analysts.</div>

    <!-- Hidden content initially -->
    <div id="content" class="hidden">
        <h1>Welcome to StockMonkey!</h1>
        <p>Click the button to see where the monkey throws the dart.</p>
    
        <div class="gif-wrapper">
            <!-- New GIF to the left of the center -->
            <div id="newMonkey"></div>

            <!-- Original GIF to the right of the center -->
            <div id="monkey"></div>
        </div>

        <button id="dartButton">Throw a Dart</button>
    </div>

    <!-- Modal Elements -->
    <div id="overlay"></div>
    <div id="modal">
        <p id="stockResult"></p>
        <div id="chartContainer">
            <canvas id="stockChart"></canvas>
        </div>
        <button id="closeModal">Close</button>
    </div>

    <script>
        const stocks = ["AAPL", "MSFT", "GOOGL", "TSLA", "AMZN", "BRK.A", "JNJ", "V", "PG", "XOM"];
        const monkey = document.getElementById("monkey");
        const newMonkey = document.getElementById("newMonkey");
        const stockResult = document.getElementById("stockResult");
        const dartButton = document.getElementById("dartButton");
        const modal = document.getElementById("modal");
        const overlay = document.getElementById("overlay");
        const closeModal = document.getElementById("closeModal");
        const introText = document.getElementById("introText");
        const content = document.getElementById("content");
        const stockChart = document.getElementById("stockChart").getContext("2d");

        let myChart; // Declare myChart variable to use later

        // Intro text sequence
        setTimeout(function() {
            introText.innerText = "They found that on average, 98 of the 100 monkey portfolios beat the professionals every year.";
        }, 3000); // 3 seconds delay before changing text

        setTimeout(function() {
            introText.innerText = "With Stock Monkey, now you can too!";
        }, 6000); // 3 more seconds for the next change

        setTimeout(function() {
            introText.style.display = "none"; // Hide the intro text
            content.classList.remove("hidden"); // Show the rest of the content
            dartButton.style.display = "inline-block"; // Show the button
        }, 9000); // 3 more seconds before showing the rest of the website

        dartButton.addEventListener("click", function() {
            // Show both GIFs and animate the dart throw GIF
            monkey.classList.add("animate");
            monkey.style.display = "block";
            newMonkey.style.display = "block"; // Show the new monkey GIF at the same time

            // After the animation ends, wait 0.7 seconds, then show the modal
            setTimeout(function() {
                const randomStock = stocks[Math.floor(Math.random() * stocks.length)];
                stockResult.innerText = "Random Stock: " + randomStock;

                // Fetch stock data and update chart
                fetchStockData(randomStock);

                // Show the modal and overlay after the delay
                modal.style.display = "block";
                overlay.style.display = "block";

                // Hide the GIFs after showing the modal
                monkey.style.display = "none";
                newMonkey.style.display = "none";
            }, 1700); // 1 second for animation + 0.7 seconds delay
        });

        closeModal.addEventListener("click", function() {
            // Hide the modal and overlay when the close button is clicked
            modal.style.display = "none";
            overlay.style.display = "none";

            // Show the button again for another dart throw
            dartButton.style.display = "inline-block";

            // Destroy the chart if it exists
            if (myChart) {
                myChart.destroy();
            }
        });

        // Function to fetch stock data and update the chart
        function fetchStockData(stockSymbol) {
            const apiKey = "5MSJZSDVES370RU3"; // Your API key
            const url = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${stockSymbol}&apikey=${apiKey}&outputsize=compact`;

            fetch(url)
                .then(response => response.json())
                .then(data => {
                    const timeSeries = data["Time Series (Daily)"];
                    const dates = Object.keys(timeSeries);
                    const prices = dates.map(date => parseFloat(timeSeries[date]["4. close"]));

                    // Prepare the data for the chart
                    if (myChart) {
                        myChart.destroy(); // Destroy previous chart if it exists
                    }

                    myChart = new Chart(stockChart, {
                        type: 'line',
                        data: {
                            labels: dates.slice(0, 10).reverse(), // Get the last 10 days
                            datasets: [{
                                label: stockSymbol + " Stock Price",
                                data: prices.slice(0, 10).reverse(),
                                borderColor: 'rgba(75, 192, 192, 1)',
                                borderWidth: 2,
                                fill: false
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: false,
                                    title: {
                                        display: true,
                                        text: 'Price (USD)'
                                    }
                                },
                                x: {
                                    title: {
                                        display: true,
                                        text: 'Date'
                                    }
                                }
                            }
                        }
                    });
                })
                .catch(error => console.error('Error fetching stock data:', error));
        }
    </script>

</body>
</html>
